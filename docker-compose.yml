services:
  n8n:
    build: .
    ports:
      - "5678:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=localhost
      - DATABASE_URL=postgresql://n8n:n8n@postgres:5432/postgres
      - N8N_USER_MANAGEMENT_DISABLED=true
      - N8N_ENCRYPTION_KEY=your-secret-key
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - NODE_FUNCTION_ALLOW_EXTERNAL_FUNCTIONS=true
      - N8N_RUNNERS_ENABLED=true
      - EXECUTIONS_MODE=queue
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - NODE_ENV=production
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - n8n-network

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n
      - POSTGRES_DB=n8n
      - POSTGRES_NON_ROOT_USER=n8n
      - POSTGRES_NON_ROOT_PASSWORD=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U n8n"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5
    restart: unless-stopped
    networks:
      - n8n-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - n8n-network

networks:
  n8n-network:
    driver: bridge

volumes:
  n8n_data:
  postgres_data:
  redis_data: 